import telebot
import random

from telebot import types

bot = telebot.TeleBot('1134044846:AAHAV1GYnv2vdyP6y83XYVD_fqg8hFL8wWs')


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üç∫–ü–∏–≤–æ")
    item2 = types.KeyboardButton("üç∑–í–∏–Ω–æ")
    item3 = types.KeyboardButton("–†–æ–º")
    item4 = types.KeyboardButton("–ö–æ–Ω—å—è–∫")
    item5 = types.KeyboardButton("–í–∏—Å–∫–∏")
    markup.add(item1, item2, item3, item4, item5)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å —Ç–≤–æ–π –≤—ã–±–æ—Ä –±—É—Ö–ª–∏—à–∫–∞ –Ω–∞ —Ç—É—Å—É.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


pivo = ['"Essa Lime & Mint"']

p_description1 = '–í–∫—É—Å: 2/10\n–¶–µ–Ω–∞: 45-60\n–û–ø—å—è–Ω–µ–Ω–∏–µ: 8/10\n–ù–µ –≤–∫—É—Å–Ω–æ–µ –ø–∏–≤–æ –¥–ª—è –¥–µ–≤–æ—á–µ–∫.'

vine = ['"BARISTA PINOTAGE"']

v_description1 = '–í–∫—É—Å: 7/10\n–¶–µ–Ω–∞: 700(0.75–ª)\n–û–ø—å—è–Ω–µ–Ω–∏–µ: 8/10\n–ú–æ—â–Ω—ã–π, —Å —Ñ—Ä—É–∫—Ç–æ–≤–æ‚Äì—è–≥–æ–¥–Ω–æ–π –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç—å—é –∏ —Å–ª–∞–¥–∫–∏–º–∏ –¥–∂–µ–º–æ–≤–æ‚Äì—è–≥–æ–¥–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏.'

rum = ['"CAPTAIN MORGAN Original Spiced Gold"']

r_description1 = '–í–∫—É—Å: 8.3/10\n–¶–µ–Ω–∞: 1100(0.7–ª)\n–û–ø—å—è–Ω–µ–Ω–∏–µ: 8/10\n–ú—è–≥–∫–∏–π,—Å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º, —Ö–æ—Ä–æ—à–æ –ø—å–µ—Ç—Å—è,–º–æ–∂–Ω–æ –ø–æ—á—Ç–∏ –Ω–µ –∑–∞–∫—É—Å—ã–≤–∞—Ç—å.'

cognac = ['"–ö–æ–Ω—å—è–∫ –∞—Ä–º—è–Ω—Å–∫–∏–π –°—Ç–∞—Ä—ã–π –ö–° –®–∞–ª–∞—Ö–æ 10 –ª–µ—Ç"']

c_description1 = '–í–∫—É—Å: 2.5/10\n–¶–µ–Ω–∞: 600(0.5–ª)\n–û–ø—å—è–Ω–µ–Ω–∏–µ: 8.2/10\n–¢–∞–∫–æ–π —Å–µ–±–µ –∫–æ–Ω—å—è–∫, –Ω–∞ –ª—é–±–∏—Ç–µ–ª—è, —Ü–µ–Ω–∞ –¥–∞–∂–µ –∑–∞–≤—ã—à–µ–Ω–∞.'

whiskey = ['"Grant‚Äôs tripple wood"']

w_description1 = '–í–∫—É—Å: 7/10\n–¶–µ–Ω–∞: 1349(0.7–ª)\n–û–ø—å—è–Ω–µ–Ω–∏–µ: 8/10\n–ì–ª—É–±–æ–∫–∏–π –≤–∫—É—Å, –ø—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö, –ø—Ä–∏–µ–º–ª–µ–º–∞—è —Ü–µ–Ω–∞.'

choiser = ['–ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å - ',
           '–Ø –¥—É–º–∞—é —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å - ',
           '–û—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç - ',
           '–•–æ—Ä–æ—à–∏–º –≤—ã–±–æ—Ä–æ–º –±—É–¥–µ—Ç - ',
           '–ö–∞–∫ –Ω–∞—Å—á—ë—Ç - ',
           '–ü–æ–ø—Ä–æ–±—É–π - ',
           '–ú–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è - ',
           '–ê –∫–∞–∫ –Ω–∞—Å—á—ë—Ç - ']


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.chat.type == 'private':
        if message.text == 'üç∫–ü–∏–≤–æ':
            global p
            p = random.choice(pivo)
            pivo_markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='description')
            pivo_markup.add(item1)
            bot.send_message(message.chat.id, random.choice(choiser) + p, reply_markup=pivo_markup)
            sti1 = open('ESSA lime&mint.webp', 'rb')
            if p == '"Essa Lime & Mint"':
                bot.send_sticker(message.chat.id, sti1)
        elif message.text == 'üç∑–í–∏–Ω–æ':
            global v
            v = random.choice(vine)
            vine_markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='v_description')
            vine_markup.add(item1)
            bot.send_message(message.chat.id, random.choice(choiser) + v, reply_markup=vine_markup)
            sti2 = open('barista_pinotage.webp', 'rb')
            if v == '"BARISTA PINOTAGE"':
                bot.send_sticker(message.chat.id, sti2)
        elif message.text == '–†–æ–º':
            global r
            r = random.choice(rum)
            rum_markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='r_description')
            rum_markup.add(item1)
            bot.send_message(message.chat.id, random.choice(choiser) + r, reply_markup=rum_markup)
            sti3 = open('CAPTAIN MORGAN Original Spiced Gold.webp', 'rb')
            if r == '"CAPTAIN MORGAN Original Spiced Gold"':
                bot.send_sticker(message.chat.id, sti3)
        elif message.text == '–ö–æ–Ω—å—è–∫':
            global c
            c = random.choice(cognac)
            cognac_markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='c_description')
            cognac_markup.add(item1)
            bot.send_message(message.chat.id, random.choice(choiser) + c, reply_markup=cognac_markup)
            sti4 = open('shalaho 10years.webp', 'rb')
            if c == '"–ö–æ–Ω—å—è–∫ –∞—Ä–º—è–Ω—Å–∫–∏–π –°—Ç–∞—Ä—ã–π –ö–° –®–∞–ª–∞—Ö–æ 10 –ª–µ—Ç"':
                bot.send_sticker(message.chat.id, sti4)
        elif message.text == '–í–∏—Å–∫–∏':
            global w
            w = random.choice(whiskey)
            whiskey_markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='w_description')
            whiskey_markup.add(item1)
            bot.send_message(message.chat.id, random.choice(choiser) + w, reply_markup=whiskey_markup)
            sti5 = open('Grants-Whisky-Triple-Wood-bottle.webp', 'rb')
            if w == '"Grant‚Äôs tripple wood"':
                bot.send_sticker(message.chat.id, sti5)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò•')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'description':
                if p == '"Essa Lime & Mint"':
                    bot.send_message(call.message.chat.id, p_description1)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=p,
                                          reply_markup=None)
                # elif p == ...
            elif call.data == 'v_description':
                if v == '"BARISTA PINOTAGE"':
                    bot.send_message(call.message.chat.id, v_description1)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=v,
                                          reply_markup=None)
            elif call.data == 'r_description':
                if r == '"CAPTAIN MORGAN Original Spiced Gold"':
                    bot.send_message(call.message.chat.id, r_description1)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=r,
                                          reply_markup=None)
            elif call.data == 'c_description':
                if c == '"–ö–æ–Ω—å—è–∫ –∞—Ä–º—è–Ω—Å–∫–∏–π –°—Ç–∞—Ä—ã–π –ö–° –®–∞–ª–∞—Ö–æ 10 –ª–µ—Ç"':
                    bot.send_message(call.message.chat.id, c_description1)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=c,
                                          reply_markup=None)
            elif call.data == 'w_description':
                if w == '"Grant‚Äôs tripple wood"':
                    bot.send_message(call.message.chat.id, w_description1)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=w,
                                          reply_markup=None)


    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
